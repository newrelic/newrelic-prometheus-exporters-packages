description: |
  End-to-end tests for MongoDB integration

scenarios:
  - description: |
      This scenario will verify that metrics from MongoDB Sharded instance (mongos) are correctly collected.
    before:
      - docker-compose -f docker-compose-sharded.yml up -d
    after:
      - docker-compose -f docker-compose-sharded.yml down -v
    integrations:
      - name: nri-mongodb3
        binary_path: ../target/bin/linux_amd64/nri-mongodb3
        exporter_binary_path: ../target/bin/linux_amd64/mongodb3-exporter  # Hardcoded as we only test E2E in the pipeline with a linux machine.
        config:
          mongodb_cluster_name: e2e_test_cluster
          mongodb_uri: mongodb://localhost:17000
          database_stats: true
          collection_stats: true
          replicaset_stats: true
          top_stats: true
          diagnostic_stats: true
    tests:
      nrqls:
        - query: "SELECT average(mongodb_dbstats_ok) FROM Metric"
      entities:
        - type: "MONGODB_DATABASE"
          data_type: "Metric"
          metric_name: "mongodb_dbstats_ok"
        - type: "MONGODB_COLLECTION"
          data_type: "Metric"
          metric_name: "mongodb_collstats_storageStats_count"
      metrics:
        - source: "mongodb.yml"
          except_entities:
            - MONGODB_INSTANCE
          except_metrics:
            - mongodb_collstats_storageStats_totalSize
            - mongodb_top_insert_count
            - mongodb_top_getmore_count
            - mongodb_top_queries_count
            - mongodb_top_readLock_count
            - mongodb_top_writeLock_count
            - mongodb_top_remove_count
            - mongodb_top_update_count
            - mongodb_dbstats_collections
            - mongodb_dbstats_views

  - description: |
      This scenario will verify that metrics from MongoDB Replicaset are correctly collected.
    before:
      - docker-compose -f docker-compose-replicaset.yml up -d
    after:
      - docker-compose -f docker-compose-replicaset.yml down -v
    integrations:
      - name: nri-mongodb3
        binary_path: ../target/bin/linux_amd64/nri-mongodb3
        exporter_binary_path: ../target/bin/linux_amd64/mongodb3-exporter  # Hardcoded as we only test E2E in the pipeline with a linux machine.
        config:
          mongodb_cluster_name: e2e_test_cluster
          mongodb_uri: mongodb://localhost:17001
          database_stats: true
          collection_stats: true
          replicaset_stats: true
          top_stats: true
          diagnostic_stats: true
          exporter_port: 9126
    tests:
      nrqls:
        - query: "SELECT average(mongodb_dbstats_ok) FROM Metric"
      entities:
        - type: "MONGODB_INSTANCE"
          data_type: "Metric"
          metric_name: "mongodb_oplog_stats_count"
        - type: "MONGODB_DATABASE"
          data_type: "Metric"
          metric_name: "mongodb_dbstats_ok"
        - type: "MONGODB_COLLECTION"
          data_type: "Metric"
          metric_name: "mongodb_collstats_storageStats_count"
      metrics:
        - source: "mongodb.yml"

  - description: |
      This scenario will verify that metrics from MongoDB v6 Standalone instance are correctly collected.
    before:
      - docker-compose -f docker-compose-standalone-v6.yml up -d
    after:
      - docker-compose -f docker-compose-standalone-v6.yml down -v
    integrations:
      - name: nri-mongodb3
        binary_path: ../target/bin/linux_amd64/nri-mongodb3
        exporter_binary_path: ../target/bin/linux_amd64/mongodb3-exporter  # Hardcoded as we only test E2E in the pipeline with a linux machine.
        config:
          mongodb_cluster_name: e2e_test_cluster
          mongodb_uri: mongodb://root:pass12345@localhost:17017
          database_stats: true
          collection_stats: true
          replicaset_stats: true
          top_stats: true
          diagnostic_stats: true
          exporter_port: 9127
          collection_filters: "E2EStandaloneDB"
          index_filters: "E2EStandaloneDB"
    tests:
      nrqls:
        - query: "SELECT average(mongodb_dbstats_ok) FROM Metric"
      entities:
        - type: "MONGODB_INSTANCE"
          data_type: "Metric"
          metric_name: "mongodb_ss_mem_resident"
        - type: "MONGODB_DATABASE"
          data_type: "Metric"
          metric_name: "mongodb_dbstats_ok"
        - type: "MONGODB_COLLECTION"
          data_type: "Metric"
          metric_name: "mongodb_collstats_storageStats_count"
      metrics:
        - source: "mongodb.yml"
       
  
  - description: |
      This scenario will verify that metrics from MongoDB v7 Standalone instance are correctly collected.
    before:
      - docker-compose -f docker-compose-standalone-v7.yml up -d
    after:
      - docker-compose -f docker-compose-standalone-v7.yml down -v
    integrations:
      - name: nri-mongodb3
        binary_path: ../target/bin/linux_amd64/nri-mongodb3
        exporter_binary_path: ../target/bin/linux_amd64/mongodb3-exporter  # Hardcoded as we only test E2E in the pipeline with a linux machine.
        config:
          mongodb_cluster_name: e2e_test_cluster
          mongodb_uri: mongodb://root:pass12345@localhost:17017
          database_stats: true
          collection_stats: true
          replicaset_stats: true
          top_stats: true
          diagnostic_stats: true
          exporter_port: 9127
          collection_filters: "E2EStandaloneDB"
          index_filters: "E2EStandaloneDB"
    tests:
      nrqls:
        - query: "SELECT average(mongodb_dbstats_ok) FROM Metric"
      entities:
        - type: "MONGODB_INSTANCE"
          data_type: "Metric"
          metric_name: "mongodb_ss_mem_resident"
        - type: "MONGODB_DATABASE"
          data_type: "Metric"
          metric_name: "mongodb_dbstats_ok"
        - type: "MONGODB_COLLECTION"
          data_type: "Metric"
          metric_name: "mongodb_collstats_storageStats_count"
      metrics:
        - source: "mongodb.yml"         
